//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ricoh.ricoh.deviceManagement {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.ricoh.co.jp/xmlns/soap/rdh/devicemanagement", ConfigurationName="ricoh.deviceManagement.deviceManagementPortType")]
    internal interface deviceManagementPortType {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/devicemanagement#getProtocolVersion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        uint getProtocolVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/devicemanagement#getProtocolVersion", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        System.Threading.Tasks.Task<uint> getProtocolVersionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/devicemanagement#getServiceCapability", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(operationCapability))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(fieldCapability))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(field))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(property))]
        Ricoh.ricoh.deviceManagement.getServiceCapabilityResponse getServiceCapability(Ricoh.ricoh.deviceManagement.getServiceCapabilityRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/devicemanagement#getServiceCapability", ReplyAction="*")]
        System.Threading.Tasks.Task<Ricoh.ricoh.deviceManagement.getServiceCapabilityResponse> getServiceCapabilityAsync(Ricoh.ricoh.deviceManagement.getServiceCapabilityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/devicemanagement#getDeviceProperty", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(operationCapability))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(fieldCapability))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(field))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(property))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        Ricoh.ricoh.deviceManagement.property[] getDeviceProperty(string sessionId, string option, string[] selectProps);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/devicemanagement#getDeviceProperty", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        System.Threading.Tasks.Task<Ricoh.ricoh.deviceManagement.property[]> getDevicePropertyAsync(string sessionId, string option, string[] selectProps);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/devicemanagement#startSession", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(operationCapability))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(fieldCapability))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(field))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(property))]
        Ricoh.ricoh.deviceManagement.startSessionResponse startSession(Ricoh.ricoh.deviceManagement.startSessionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/devicemanagement#startSession", ReplyAction="*")]
        System.Threading.Tasks.Task<Ricoh.ricoh.deviceManagement.startSessionResponse> startSessionAsync(Ricoh.ricoh.deviceManagement.startSessionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/devicemanagement#terminateSession", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(operationCapability))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(fieldCapability))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(field))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(property))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string terminateSession(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/devicemanagement#terminateSession", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        System.Threading.Tasks.Task<string> terminateSessionAsync(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/devicemanagement#getObjects", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(operationCapability))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(fieldCapability))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(field))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(property))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string[] getObjects(string sessionId, uint deviceId, string objectClass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/devicemanagement#getObjects", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        System.Threading.Tasks.Task<string[]> getObjectsAsync(string sessionId, uint deviceId, string objectClass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/devicemanagement#getObject", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(operationCapability))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(fieldCapability))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(field))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(property))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        Ricoh.ricoh.deviceManagement.@object getObject(string sessionId, uint deviceId, uint objectId, string[] fieldList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/devicemanagement#getObject", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        System.Threading.Tasks.Task<Ricoh.ricoh.deviceManagement.@object> getObjectAsync(string sessionId, uint deviceId, uint objectId, string[] fieldList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/devicemanagement#getObjectCapability", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(operationCapability))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(fieldCapability))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(field))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(property))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        Ricoh.ricoh.deviceManagement.objectCapability getObjectCapability(string sessionId, uint deviceId, uint objectId, string option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/devicemanagement#getObjectCapability", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        System.Threading.Tasks.Task<Ricoh.ricoh.deviceManagement.objectCapability> getObjectCapabilityAsync(string sessionId, uint deviceId, uint objectId, string option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/devicemanagement#lockDevice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(operationCapability))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(fieldCapability))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(field))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(property))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string lockDevice(string sessionId, uint deviceId, uint validDurationHint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/devicemanagement#lockDevice", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        System.Threading.Tasks.Task<string> lockDeviceAsync(string sessionId, uint deviceId, uint validDurationHint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/devicemanagement#unlockDevice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(operationCapability))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(fieldCapability))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(field))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(property))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string unlockDevice(string sessionId, uint deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/devicemanagement#unlockDevice", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        System.Threading.Tasks.Task<string> unlockDeviceAsync(string sessionId, uint deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/devicemanagement#updateObject", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(operationCapability))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(fieldCapability))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(field))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(property))]
        Ricoh.ricoh.deviceManagement.updateObjectResponse updateObject(Ricoh.ricoh.deviceManagement.updateObjectRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/devicemanagement#updateObject", ReplyAction="*")]
        System.Threading.Tasks.Task<Ricoh.ricoh.deviceManagement.updateObjectResponse> updateObjectAsync(Ricoh.ricoh.deviceManagement.updateObjectRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://www.ricoh.co.jp/xmlns/schema/rdh/commontypes")]
    public partial class property : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string propNameField;
        
        private string propValField;
        
        /// <remarks/>
        public string propName {
            get {
                return this.propNameField;
            }
            set {
                this.propNameField = value;
                this.RaisePropertyChanged("propName");
            }
        }
        
        /// <remarks/>
        public string propVal {
            get {
                return this.propValField;
            }
            set {
                this.propValField = value;
                this.RaisePropertyChanged("propVal");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://www.ricoh.co.jp/xmlns/schema/rdh/devicemanagement")]
    public partial class operationCapability : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://www.ricoh.co.jp/xmlns/schema/rdh/devicemanagement")]
    public partial class fieldCapability : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string valueField;
        
        private string typeField;
        
        private string descriptionField;
        
        private string rangeTypeField;
        
        private string minField;
        
        private string maxField;
        
        private string valueStepField;
        
        private string[] valueEnumField;
        
        private bool uniqueField;
        
        private bool multipleField;
        
        private bool requiredField;
        
        private bool readableField;
        
        private bool writableField;
        
        private bool hiddenField;
        
        private property[] otherCapabilityField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        /// <remarks/>
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("value");
            }
        }
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("type");
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("description");
            }
        }
        
        /// <remarks/>
        public string rangeType {
            get {
                return this.rangeTypeField;
            }
            set {
                this.rangeTypeField = value;
                this.RaisePropertyChanged("rangeType");
            }
        }
        
        /// <remarks/>
        public string min {
            get {
                return this.minField;
            }
            set {
                this.minField = value;
                this.RaisePropertyChanged("min");
            }
        }
        
        /// <remarks/>
        public string max {
            get {
                return this.maxField;
            }
            set {
                this.maxField = value;
                this.RaisePropertyChanged("max");
            }
        }
        
        /// <remarks/>
        public string valueStep {
            get {
                return this.valueStepField;
            }
            set {
                this.valueStepField = value;
                this.RaisePropertyChanged("valueStep");
            }
        }
        
        /// <remarks/>
        public string[] valueEnum {
            get {
                return this.valueEnumField;
            }
            set {
                this.valueEnumField = value;
                this.RaisePropertyChanged("valueEnum");
            }
        }
        
        /// <remarks/>
        public bool unique {
            get {
                return this.uniqueField;
            }
            set {
                this.uniqueField = value;
                this.RaisePropertyChanged("unique");
            }
        }
        
        /// <remarks/>
        public bool multiple {
            get {
                return this.multipleField;
            }
            set {
                this.multipleField = value;
                this.RaisePropertyChanged("multiple");
            }
        }
        
        /// <remarks/>
        public bool required {
            get {
                return this.requiredField;
            }
            set {
                this.requiredField = value;
                this.RaisePropertyChanged("required");
            }
        }
        
        /// <remarks/>
        public bool readable {
            get {
                return this.readableField;
            }
            set {
                this.readableField = value;
                this.RaisePropertyChanged("readable");
            }
        }
        
        /// <remarks/>
        public bool writable {
            get {
                return this.writableField;
            }
            set {
                this.writableField = value;
                this.RaisePropertyChanged("writable");
            }
        }
        
        /// <remarks/>
        public bool hidden {
            get {
                return this.hiddenField;
            }
            set {
                this.hiddenField = value;
                this.RaisePropertyChanged("hidden");
            }
        }
        
        /// <remarks/>
        public property[] otherCapability {
            get {
                return this.otherCapabilityField;
            }
            set {
                this.otherCapabilityField = value;
                this.RaisePropertyChanged("otherCapability");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://www.ricoh.co.jp/xmlns/schema/rdh/devicemanagement")]
    public partial class objectCapability : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string classField;
        
        private string descriptionField;
        
        private fieldCapability[] fieldListField;
        
        private operationCapability[] operationListField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        /// <remarks/>
        public string @class {
            get {
                return this.classField;
            }
            set {
                this.classField = value;
                this.RaisePropertyChanged("class");
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("description");
            }
        }
        
        /// <remarks/>
        public fieldCapability[] fieldList {
            get {
                return this.fieldListField;
            }
            set {
                this.fieldListField = value;
                this.RaisePropertyChanged("fieldList");
            }
        }
        
        /// <remarks/>
        public operationCapability[] operationList {
            get {
                return this.operationListField;
            }
            set {
                this.operationListField = value;
                this.RaisePropertyChanged("operationList");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://www.ricoh.co.jp/xmlns/schema/rdh/devicemanagement")]
    public partial class field : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string valueField;
        
        private string typeField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        /// <remarks/>
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("value");
            }
        }
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("type");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://www.ricoh.co.jp/xmlns/schema/rdh/devicemanagement")]
    public partial class @object : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string classField;
        
        private uint oidField;
        
        private field[] fieldListField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        /// <remarks/>
        public string @class {
            get {
                return this.classField;
            }
            set {
                this.classField = value;
                this.RaisePropertyChanged("class");
            }
        }
        
        /// <remarks/>
        public uint oid {
            get {
                return this.oidField;
            }
            set {
                this.oidField = value;
                this.RaisePropertyChanged("oid");
            }
        }
        
        /// <remarks/>
        public field[] fieldList {
            get {
                return this.fieldListField;
            }
            set {
                this.fieldListField = value;
                this.RaisePropertyChanged("fieldList");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getServiceCapability", WrapperNamespace="http://www.ricoh.co.jp/xmlns/soap/rdh/devicemanagement", IsWrapped=true)]
    internal partial class getServiceCapabilityRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sessionId;
        
        public getServiceCapabilityRequest() {
        }
        
        public getServiceCapabilityRequest(string sessionId) {
            this.sessionId = sessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getServiceCapabilityResponse", WrapperNamespace="http://www.ricoh.co.jp/xmlns/soap/rdh/devicemanagement", IsWrapped=true)]
    internal partial class getServiceCapabilityResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public Ricoh.ricoh.deviceManagement.property[] returnValue;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string[] supportedClasses;
        
        public getServiceCapabilityResponse() {
        }
        
        public getServiceCapabilityResponse(Ricoh.ricoh.deviceManagement.property[] returnValue, string[] supportedClasses) {
            this.returnValue = returnValue;
            this.supportedClasses = supportedClasses;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="startSession", WrapperNamespace="http://www.ricoh.co.jp/xmlns/soap/rdh/devicemanagement", IsWrapped=true)]
    internal partial class startSessionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string stringIn;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public ushort timeLimit;
        
        public startSessionRequest() {
        }
        
        public startSessionRequest(string stringIn, ushort timeLimit) {
            this.stringIn = stringIn;
            this.timeLimit = timeLimit;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="startSessionResponse", WrapperNamespace="http://www.ricoh.co.jp/xmlns/soap/rdh/devicemanagement", IsWrapped=true)]
    internal partial class startSessionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string returnValue;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string stringOut;
        
        public startSessionResponse() {
        }
        
        public startSessionResponse(string returnValue, string stringOut) {
            this.returnValue = returnValue;
            this.stringOut = stringOut;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="updateObject", WrapperNamespace="http://www.ricoh.co.jp/xmlns/soap/rdh/devicemanagement", IsWrapped=true)]
    internal partial class updateObjectRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public uint deviceId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public Ricoh.ricoh.deviceManagement.@object @object;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public Ricoh.ricoh.deviceManagement.property[] options;
        
        public updateObjectRequest() {
        }
        
        public updateObjectRequest(string sessionId, uint deviceId, Ricoh.ricoh.deviceManagement.@object @object, Ricoh.ricoh.deviceManagement.property[] options) {
            this.sessionId = sessionId;
            this.deviceId = deviceId;
            this.@object = @object;
            this.options = options;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="updateObjectResponse", WrapperNamespace="http://www.ricoh.co.jp/xmlns/soap/rdh/devicemanagement", IsWrapped=true)]
    internal partial class updateObjectResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string returnValue;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public uint objectId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string[] postProcess;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public Ricoh.ricoh.deviceManagement.property[] truncatedParameter;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=4)]
        public int failedPropertyIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=5)]
        public string failedCode;
        
        public updateObjectResponse() {
        }
        
        public updateObjectResponse(string returnValue, uint objectId, string[] postProcess, Ricoh.ricoh.deviceManagement.property[] truncatedParameter, int failedPropertyIndex, string failedCode) {
            this.returnValue = returnValue;
            this.objectId = objectId;
            this.postProcess = postProcess;
            this.truncatedParameter = truncatedParameter;
            this.failedPropertyIndex = failedPropertyIndex;
            this.failedCode = failedCode;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface deviceManagementPortTypeChannel : Ricoh.ricoh.deviceManagement.deviceManagementPortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class deviceManagementPortTypeClient : System.ServiceModel.ClientBase<Ricoh.ricoh.deviceManagement.deviceManagementPortType>, Ricoh.ricoh.deviceManagement.deviceManagementPortType {
        
        public deviceManagementPortTypeClient() {
        }
        
        public deviceManagementPortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public deviceManagementPortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public deviceManagementPortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public deviceManagementPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public uint getProtocolVersion() {
            return base.Channel.getProtocolVersion();
        }
        
        public System.Threading.Tasks.Task<uint> getProtocolVersionAsync() {
            return base.Channel.getProtocolVersionAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Ricoh.ricoh.deviceManagement.getServiceCapabilityResponse Ricoh.ricoh.deviceManagement.deviceManagementPortType.getServiceCapability(Ricoh.ricoh.deviceManagement.getServiceCapabilityRequest request) {
            return base.Channel.getServiceCapability(request);
        }
        
        public Ricoh.ricoh.deviceManagement.property[] getServiceCapability(string sessionId, out string[] supportedClasses) {
            Ricoh.ricoh.deviceManagement.getServiceCapabilityRequest inValue = new Ricoh.ricoh.deviceManagement.getServiceCapabilityRequest();
            inValue.sessionId = sessionId;
            Ricoh.ricoh.deviceManagement.getServiceCapabilityResponse retVal = ((Ricoh.ricoh.deviceManagement.deviceManagementPortType)(this)).getServiceCapability(inValue);
            supportedClasses = retVal.supportedClasses;
            return retVal.returnValue;
        }
        
        public System.Threading.Tasks.Task<Ricoh.ricoh.deviceManagement.getServiceCapabilityResponse> getServiceCapabilityAsync(Ricoh.ricoh.deviceManagement.getServiceCapabilityRequest request) {
            return base.Channel.getServiceCapabilityAsync(request);
        }
        
        public Ricoh.ricoh.deviceManagement.property[] getDeviceProperty(string sessionId, string option, string[] selectProps) {
            return base.Channel.getDeviceProperty(sessionId, option, selectProps);
        }
        
        public System.Threading.Tasks.Task<Ricoh.ricoh.deviceManagement.property[]> getDevicePropertyAsync(string sessionId, string option, string[] selectProps) {
            return base.Channel.getDevicePropertyAsync(sessionId, option, selectProps);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Ricoh.ricoh.deviceManagement.startSessionResponse Ricoh.ricoh.deviceManagement.deviceManagementPortType.startSession(Ricoh.ricoh.deviceManagement.startSessionRequest request) {
            return base.Channel.startSession(request);
        }
        
        public string startSession(string stringIn, ushort timeLimit, out string stringOut) {
            Ricoh.ricoh.deviceManagement.startSessionRequest inValue = new Ricoh.ricoh.deviceManagement.startSessionRequest();
            inValue.stringIn = stringIn;
            inValue.timeLimit = timeLimit;
            Ricoh.ricoh.deviceManagement.startSessionResponse retVal = ((Ricoh.ricoh.deviceManagement.deviceManagementPortType)(this)).startSession(inValue);
            stringOut = retVal.stringOut;
            return retVal.returnValue;
        }
        
        public System.Threading.Tasks.Task<Ricoh.ricoh.deviceManagement.startSessionResponse> startSessionAsync(Ricoh.ricoh.deviceManagement.startSessionRequest request) {
            return base.Channel.startSessionAsync(request);
        }
        
        public string terminateSession(string sessionId) {
            return base.Channel.terminateSession(sessionId);
        }
        
        public System.Threading.Tasks.Task<string> terminateSessionAsync(string sessionId) {
            return base.Channel.terminateSessionAsync(sessionId);
        }
        
        public string[] getObjects(string sessionId, uint deviceId, string objectClass) {
            return base.Channel.getObjects(sessionId, deviceId, objectClass);
        }
        
        public System.Threading.Tasks.Task<string[]> getObjectsAsync(string sessionId, uint deviceId, string objectClass) {
            return base.Channel.getObjectsAsync(sessionId, deviceId, objectClass);
        }
        
        public Ricoh.ricoh.deviceManagement.@object getObject(string sessionId, uint deviceId, uint objectId, string[] fieldList) {
            return base.Channel.getObject(sessionId, deviceId, objectId, fieldList);
        }
        
        public System.Threading.Tasks.Task<Ricoh.ricoh.deviceManagement.@object> getObjectAsync(string sessionId, uint deviceId, uint objectId, string[] fieldList) {
            return base.Channel.getObjectAsync(sessionId, deviceId, objectId, fieldList);
        }
        
        public Ricoh.ricoh.deviceManagement.objectCapability getObjectCapability(string sessionId, uint deviceId, uint objectId, string option) {
            return base.Channel.getObjectCapability(sessionId, deviceId, objectId, option);
        }
        
        public System.Threading.Tasks.Task<Ricoh.ricoh.deviceManagement.objectCapability> getObjectCapabilityAsync(string sessionId, uint deviceId, uint objectId, string option) {
            return base.Channel.getObjectCapabilityAsync(sessionId, deviceId, objectId, option);
        }
        
        public string lockDevice(string sessionId, uint deviceId, uint validDurationHint) {
            return base.Channel.lockDevice(sessionId, deviceId, validDurationHint);
        }
        
        public System.Threading.Tasks.Task<string> lockDeviceAsync(string sessionId, uint deviceId, uint validDurationHint) {
            return base.Channel.lockDeviceAsync(sessionId, deviceId, validDurationHint);
        }
        
        public string unlockDevice(string sessionId, uint deviceId) {
            return base.Channel.unlockDevice(sessionId, deviceId);
        }
        
        public System.Threading.Tasks.Task<string> unlockDeviceAsync(string sessionId, uint deviceId) {
            return base.Channel.unlockDeviceAsync(sessionId, deviceId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Ricoh.ricoh.deviceManagement.updateObjectResponse Ricoh.ricoh.deviceManagement.deviceManagementPortType.updateObject(Ricoh.ricoh.deviceManagement.updateObjectRequest request) {
            return base.Channel.updateObject(request);
        }
        
        public string updateObject(string sessionId, uint deviceId, Ricoh.ricoh.deviceManagement.@object @object, Ricoh.ricoh.deviceManagement.property[] options, out uint objectId, out string[] postProcess, out Ricoh.ricoh.deviceManagement.property[] truncatedParameter, out int failedPropertyIndex, out string failedCode) {
            Ricoh.ricoh.deviceManagement.updateObjectRequest inValue = new Ricoh.ricoh.deviceManagement.updateObjectRequest();
            inValue.sessionId = sessionId;
            inValue.deviceId = deviceId;
            inValue.@object = @object;
            inValue.options = options;
            Ricoh.ricoh.deviceManagement.updateObjectResponse retVal = ((Ricoh.ricoh.deviceManagement.deviceManagementPortType)(this)).updateObject(inValue);
            objectId = retVal.objectId;
            postProcess = retVal.postProcess;
            truncatedParameter = retVal.truncatedParameter;
            failedPropertyIndex = retVal.failedPropertyIndex;
            failedCode = retVal.failedCode;
            return retVal.returnValue;
        }
        
        public System.Threading.Tasks.Task<Ricoh.ricoh.deviceManagement.updateObjectResponse> updateObjectAsync(Ricoh.ricoh.deviceManagement.updateObjectRequest request) {
            return base.Channel.updateObjectAsync(request);
        }
    }
}
