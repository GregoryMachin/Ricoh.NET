//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ricoh.ricoh.uDirectory {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.ricoh.co.jp/xmlns/soap/rdh/udirectory", ConfigurationName="ricoh.uDirectory.uDirectoryPortType")]
    internal interface uDirectoryPortType {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/udirectory#getProtocolVersion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        uint getProtocolVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/udirectory#getProtocolVersion", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        System.Threading.Tasks.Task<uint> getProtocolVersionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/udirectory#getServiceVersion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(objectRelation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(queryOrderBy))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(queryTerm))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(property))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        Ricoh.ricoh.uDirectory.property[] getServiceVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/udirectory#getServiceVersion", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        System.Threading.Tasks.Task<Ricoh.ricoh.uDirectory.property[]> getServiceVersionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/udirectory#getServiceState", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(objectRelation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(queryOrderBy))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(queryTerm))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(property))]
        Ricoh.ricoh.uDirectory.getServiceStateResponse getServiceState(Ricoh.ricoh.uDirectory.getServiceStateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/udirectory#getServiceState", ReplyAction="*")]
        System.Threading.Tasks.Task<Ricoh.ricoh.uDirectory.getServiceStateResponse> getServiceStateAsync(Ricoh.ricoh.uDirectory.getServiceStateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/udirectory#getServiceCapability", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(objectRelation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(queryOrderBy))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(queryTerm))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(property))]
        Ricoh.ricoh.uDirectory.getServiceCapabilityResponse getServiceCapability(Ricoh.ricoh.uDirectory.getServiceCapabilityRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/udirectory#getServiceCapability", ReplyAction="*")]
        System.Threading.Tasks.Task<Ricoh.ricoh.uDirectory.getServiceCapabilityResponse> getServiceCapabilityAsync(Ricoh.ricoh.uDirectory.getServiceCapabilityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/udirectory#startSession", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(objectRelation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(queryOrderBy))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(queryTerm))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(property))]
        Ricoh.ricoh.uDirectory.startSessionResponse startSession(Ricoh.ricoh.uDirectory.startSessionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/udirectory#startSession", ReplyAction="*")]
        System.Threading.Tasks.Task<Ricoh.ricoh.uDirectory.startSessionResponse> startSessionAsync(Ricoh.ricoh.uDirectory.startSessionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/udirectory#keepSession", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(objectRelation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(queryOrderBy))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(queryTerm))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(property))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string keepSession(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/udirectory#keepSession", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        System.Threading.Tasks.Task<string> keepSessionAsync(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/udirectory#terminateSession", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(objectRelation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(queryOrderBy))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(queryTerm))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(property))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string terminateSession(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/udirectory#terminateSession", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        System.Threading.Tasks.Task<string> terminateSessionAsync(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/udirectory#searchObjects", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(objectRelation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(queryOrderBy))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(queryTerm))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(property))]
        Ricoh.ricoh.uDirectory.searchObjectsResponse searchObjects(Ricoh.ricoh.uDirectory.searchObjectsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/udirectory#searchObjects", ReplyAction="*")]
        System.Threading.Tasks.Task<Ricoh.ricoh.uDirectory.searchObjectsResponse> searchObjectsAsync(Ricoh.ricoh.uDirectory.searchObjectsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/udirectory#getObjectsProps", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(objectRelation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(queryOrderBy))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(queryTerm))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(property))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        Ricoh.ricoh.uDirectory.property[][] getObjectsProps(string sessionId, string[] objectIdList, string[] selectProps, Ricoh.ricoh.uDirectory.property[] options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/udirectory#getObjectsProps", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        System.Threading.Tasks.Task<Ricoh.ricoh.uDirectory.property[][]> getObjectsPropsAsync(string sessionId, string[] objectIdList, string[] selectProps, Ricoh.ricoh.uDirectory.property[] options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/udirectory#putObjects", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(objectRelation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(queryOrderBy))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(queryTerm))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(property))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string[] putObjects(string sessionId, string objectClass, string parentObjectId, Ricoh.ricoh.uDirectory.property[][] propListList, Ricoh.ricoh.uDirectory.property[] options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/udirectory#putObjects", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        System.Threading.Tasks.Task<string[]> putObjectsAsync(string sessionId, string objectClass, string parentObjectId, Ricoh.ricoh.uDirectory.property[][] propListList, Ricoh.ricoh.uDirectory.property[] options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/udirectory#putObjectProps", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(objectRelation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(queryOrderBy))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(queryTerm))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(property))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string putObjectProps(string sessionId, uint objectId, Ricoh.ricoh.uDirectory.property[] propList, Ricoh.ricoh.uDirectory.property[] options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/udirectory#putObjectProps", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        System.Threading.Tasks.Task<string> putObjectPropsAsync(string sessionId, uint objectId, Ricoh.ricoh.uDirectory.property[] propList, Ricoh.ricoh.uDirectory.property[] options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/udirectory#putObjectRelations", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(objectRelation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(queryOrderBy))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(queryTerm))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(property))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string putObjectRelations(string sessionId, Ricoh.ricoh.uDirectory.objectRelation[] objectRelationList, Ricoh.ricoh.uDirectory.property[] options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/udirectory#putObjectRelations", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        System.Threading.Tasks.Task<string> putObjectRelationsAsync(string sessionId, Ricoh.ricoh.uDirectory.objectRelation[] objectRelationList, Ricoh.ricoh.uDirectory.property[] options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/udirectory#deleteObjects", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(objectRelation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(queryOrderBy))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(queryTerm))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(property))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string deleteObjects(string sessionId, string[] objectIdList, Ricoh.ricoh.uDirectory.property[] options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/udirectory#deleteObjects", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        System.Threading.Tasks.Task<string> deleteObjectsAsync(string sessionId, string[] objectIdList, Ricoh.ricoh.uDirectory.property[] options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/udirectory#deleteObjectRelations", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(objectRelation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(queryOrderBy))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(queryTerm))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(property))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string deleteObjectRelations(string sessionId, Ricoh.ricoh.uDirectory.objectRelation[] objectRelationList, Ricoh.ricoh.uDirectory.property[] options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ricoh.co.jp/xmlns/soap/rdh/udirectory#deleteObjectRelations", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        System.Threading.Tasks.Task<string> deleteObjectRelationsAsync(string sessionId, Ricoh.ricoh.uDirectory.objectRelation[] objectRelationList, Ricoh.ricoh.uDirectory.property[] options);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://www.ricoh.co.jp/xmlns/schema/rdh/commontypes")]
    public partial class property : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string propNameField;
        
        private string propValField;
        
        /// <remarks/>
        public string propName {
            get {
                return this.propNameField;
            }
            set {
                this.propNameField = value;
                this.RaisePropertyChanged("propName");
            }
        }
        
        /// <remarks/>
        public string propVal {
            get {
                return this.propValField;
            }
            set {
                this.propValField = value;
                this.RaisePropertyChanged("propVal");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://www.ricoh.co.jp/xmlns/schema/rdh/commontypes")]
    public partial class objectRelation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string objectRelationClassField;
        
        private string parentObjectIdField;
        
        private string childObjectIdField;
        
        /// <remarks/>
        public string objectRelationClass {
            get {
                return this.objectRelationClassField;
            }
            set {
                this.objectRelationClassField = value;
                this.RaisePropertyChanged("objectRelationClass");
            }
        }
        
        /// <remarks/>
        public string parentObjectId {
            get {
                return this.parentObjectIdField;
            }
            set {
                this.parentObjectIdField = value;
                this.RaisePropertyChanged("parentObjectId");
            }
        }
        
        /// <remarks/>
        public string childObjectId {
            get {
                return this.childObjectIdField;
            }
            set {
                this.childObjectIdField = value;
                this.RaisePropertyChanged("childObjectId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://www.ricoh.co.jp/xmlns/schema/rdh/commontypes")]
    public partial class queryOrderBy : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string propNameField;
        
        private bool isDecendingField;
        
        /// <remarks/>
        public string propName {
            get {
                return this.propNameField;
            }
            set {
                this.propNameField = value;
                this.RaisePropertyChanged("propName");
            }
        }
        
        /// <remarks/>
        public bool isDecending {
            get {
                return this.isDecendingField;
            }
            set {
                this.isDecendingField = value;
                this.RaisePropertyChanged("isDecending");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://www.ricoh.co.jp/xmlns/schema/rdh/commontypes")]
    public partial class queryTerm : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string operatorField;
        
        private string propNameField;
        
        private string propValField;
        
        private string propVal2Field;
        
        /// <remarks/>
        public string @operator {
            get {
                return this.operatorField;
            }
            set {
                this.operatorField = value;
                this.RaisePropertyChanged("operator");
            }
        }
        
        /// <remarks/>
        public string propName {
            get {
                return this.propNameField;
            }
            set {
                this.propNameField = value;
                this.RaisePropertyChanged("propName");
            }
        }
        
        /// <remarks/>
        public string propVal {
            get {
                return this.propValField;
            }
            set {
                this.propValField = value;
                this.RaisePropertyChanged("propVal");
            }
        }
        
        /// <remarks/>
        public string propVal2 {
            get {
                return this.propVal2Field;
            }
            set {
                this.propVal2Field = value;
                this.RaisePropertyChanged("propVal2");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getServiceState", WrapperNamespace="http://www.ricoh.co.jp/xmlns/soap/rdh/udirectory", IsWrapped=true)]
    internal partial class getServiceStateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sessionId;
        
        public getServiceStateRequest() {
        }
        
        public getServiceStateRequest(string sessionId) {
            this.sessionId = sessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getServiceStateResponse", WrapperNamespace="http://www.ricoh.co.jp/xmlns/soap/rdh/udirectory", IsWrapped=true)]
    internal partial class getServiceStateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string returnValue;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public System.DateTime currentDateTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public Ricoh.ricoh.uDirectory.property[][] otherStates;
        
        public getServiceStateResponse() {
        }
        
        public getServiceStateResponse(string returnValue, System.DateTime currentDateTime, Ricoh.ricoh.uDirectory.property[][] otherStates) {
            this.returnValue = returnValue;
            this.currentDateTime = currentDateTime;
            this.otherStates = otherStates;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getServiceCapability", WrapperNamespace="http://www.ricoh.co.jp/xmlns/soap/rdh/udirectory", IsWrapped=true)]
    internal partial class getServiceCapabilityRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sessionId;
        
        public getServiceCapabilityRequest() {
        }
        
        public getServiceCapabilityRequest(string sessionId) {
            this.sessionId = sessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getServiceCapabilityResponse", WrapperNamespace="http://www.ricoh.co.jp/xmlns/soap/rdh/udirectory", IsWrapped=true)]
    internal partial class getServiceCapabilityResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public Ricoh.ricoh.uDirectory.property[] returnValue;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string[] supportedClasses;
        
        public getServiceCapabilityResponse() {
        }
        
        public getServiceCapabilityResponse(Ricoh.ricoh.uDirectory.property[] returnValue, string[] supportedClasses) {
            this.returnValue = returnValue;
            this.supportedClasses = supportedClasses;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="startSession", WrapperNamespace="http://www.ricoh.co.jp/xmlns/soap/rdh/udirectory", IsWrapped=true)]
    internal partial class startSessionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string stringIn;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public ushort timeLimit;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string lockMode;
        
        public startSessionRequest() {
        }
        
        public startSessionRequest(string stringIn, ushort timeLimit, string lockMode) {
            this.stringIn = stringIn;
            this.timeLimit = timeLimit;
            this.lockMode = lockMode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="startSessionResponse", WrapperNamespace="http://www.ricoh.co.jp/xmlns/soap/rdh/udirectory", IsWrapped=true)]
    internal partial class startSessionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string returnValue;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string stringOut;
        
        public startSessionResponse() {
        }
        
        public startSessionResponse(string returnValue, string stringOut) {
            this.returnValue = returnValue;
            this.stringOut = stringOut;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="searchObjects", WrapperNamespace="http://www.ricoh.co.jp/xmlns/soap/rdh/udirectory", IsWrapped=true)]
    internal partial class searchObjectsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string[] selectProps;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string fromClass;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public uint parentObjectId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=4)]
        public uint resultSetId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=5)]
        public Ricoh.ricoh.uDirectory.queryTerm[] whereAnd;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=6)]
        public Ricoh.ricoh.uDirectory.queryTerm[] whereOr;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=7)]
        public Ricoh.ricoh.uDirectory.queryOrderBy[] orderBy;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=8)]
        public uint rowOffset;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=9)]
        public uint rowCount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=10)]
        public uint lastObjectId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=11)]
        public Ricoh.ricoh.uDirectory.property[] queryOptions;
        
        public searchObjectsRequest() {
        }
        
        public searchObjectsRequest(string sessionId, string[] selectProps, string fromClass, uint parentObjectId, uint resultSetId, Ricoh.ricoh.uDirectory.queryTerm[] whereAnd, Ricoh.ricoh.uDirectory.queryTerm[] whereOr, Ricoh.ricoh.uDirectory.queryOrderBy[] orderBy, uint rowOffset, uint rowCount, uint lastObjectId, Ricoh.ricoh.uDirectory.property[] queryOptions) {
            this.sessionId = sessionId;
            this.selectProps = selectProps;
            this.fromClass = fromClass;
            this.parentObjectId = parentObjectId;
            this.resultSetId = resultSetId;
            this.whereAnd = whereAnd;
            this.whereOr = whereOr;
            this.orderBy = orderBy;
            this.rowOffset = rowOffset;
            this.rowCount = rowCount;
            this.lastObjectId = lastObjectId;
            this.queryOptions = queryOptions;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="searchObjectsResponse", WrapperNamespace="http://www.ricoh.co.jp/xmlns/soap/rdh/udirectory", IsWrapped=true)]
    internal partial class searchObjectsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string returnValue;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string resultSetId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public uint numOfResults;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public Ricoh.ricoh.uDirectory.property[][] rowList;
        
        public searchObjectsResponse() {
        }
        
        public searchObjectsResponse(string returnValue, string resultSetId, uint numOfResults, Ricoh.ricoh.uDirectory.property[][] rowList) {
            this.returnValue = returnValue;
            this.resultSetId = resultSetId;
            this.numOfResults = numOfResults;
            this.rowList = rowList;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface uDirectoryPortTypeChannel : Ricoh.ricoh.uDirectory.uDirectoryPortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class uDirectoryPortTypeClient : System.ServiceModel.ClientBase<Ricoh.ricoh.uDirectory.uDirectoryPortType>, Ricoh.ricoh.uDirectory.uDirectoryPortType {
        
        public uDirectoryPortTypeClient() {
        }
        
        public uDirectoryPortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public uDirectoryPortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public uDirectoryPortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public uDirectoryPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public uint getProtocolVersion() {
            return base.Channel.getProtocolVersion();
        }
        
        public System.Threading.Tasks.Task<uint> getProtocolVersionAsync() {
            return base.Channel.getProtocolVersionAsync();
        }
        
        public Ricoh.ricoh.uDirectory.property[] getServiceVersion() {
            return base.Channel.getServiceVersion();
        }
        
        public System.Threading.Tasks.Task<Ricoh.ricoh.uDirectory.property[]> getServiceVersionAsync() {
            return base.Channel.getServiceVersionAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Ricoh.ricoh.uDirectory.getServiceStateResponse Ricoh.ricoh.uDirectory.uDirectoryPortType.getServiceState(Ricoh.ricoh.uDirectory.getServiceStateRequest request) {
            return base.Channel.getServiceState(request);
        }
        
        public string getServiceState(string sessionId, out System.DateTime currentDateTime, out Ricoh.ricoh.uDirectory.property[][] otherStates) {
            Ricoh.ricoh.uDirectory.getServiceStateRequest inValue = new Ricoh.ricoh.uDirectory.getServiceStateRequest();
            inValue.sessionId = sessionId;
            Ricoh.ricoh.uDirectory.getServiceStateResponse retVal = ((Ricoh.ricoh.uDirectory.uDirectoryPortType)(this)).getServiceState(inValue);
            currentDateTime = retVal.currentDateTime;
            otherStates = retVal.otherStates;
            return retVal.returnValue;
        }
        
        public System.Threading.Tasks.Task<Ricoh.ricoh.uDirectory.getServiceStateResponse> getServiceStateAsync(Ricoh.ricoh.uDirectory.getServiceStateRequest request) {
            return base.Channel.getServiceStateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Ricoh.ricoh.uDirectory.getServiceCapabilityResponse Ricoh.ricoh.uDirectory.uDirectoryPortType.getServiceCapability(Ricoh.ricoh.uDirectory.getServiceCapabilityRequest request) {
            return base.Channel.getServiceCapability(request);
        }
        
        public Ricoh.ricoh.uDirectory.property[] getServiceCapability(string sessionId, out string[] supportedClasses) {
            Ricoh.ricoh.uDirectory.getServiceCapabilityRequest inValue = new Ricoh.ricoh.uDirectory.getServiceCapabilityRequest();
            inValue.sessionId = sessionId;
            Ricoh.ricoh.uDirectory.getServiceCapabilityResponse retVal = ((Ricoh.ricoh.uDirectory.uDirectoryPortType)(this)).getServiceCapability(inValue);
            supportedClasses = retVal.supportedClasses;
            return retVal.returnValue;
        }
        
        public System.Threading.Tasks.Task<Ricoh.ricoh.uDirectory.getServiceCapabilityResponse> getServiceCapabilityAsync(Ricoh.ricoh.uDirectory.getServiceCapabilityRequest request) {
            return base.Channel.getServiceCapabilityAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Ricoh.ricoh.uDirectory.startSessionResponse Ricoh.ricoh.uDirectory.uDirectoryPortType.startSession(Ricoh.ricoh.uDirectory.startSessionRequest request) {
            return base.Channel.startSession(request);
        }
        
        public string startSession(string stringIn, ushort timeLimit, string lockMode, out string stringOut) {
            Ricoh.ricoh.uDirectory.startSessionRequest inValue = new Ricoh.ricoh.uDirectory.startSessionRequest();
            inValue.stringIn = stringIn;
            inValue.timeLimit = timeLimit;
            inValue.lockMode = lockMode;
            Ricoh.ricoh.uDirectory.startSessionResponse retVal = ((Ricoh.ricoh.uDirectory.uDirectoryPortType)(this)).startSession(inValue);
            stringOut = retVal.stringOut;
            return retVal.returnValue;
        }
        
        public System.Threading.Tasks.Task<Ricoh.ricoh.uDirectory.startSessionResponse> startSessionAsync(Ricoh.ricoh.uDirectory.startSessionRequest request) {
            return base.Channel.startSessionAsync(request);
        }
        
        public string keepSession(string sessionId) {
            return base.Channel.keepSession(sessionId);
        }
        
        public System.Threading.Tasks.Task<string> keepSessionAsync(string sessionId) {
            return base.Channel.keepSessionAsync(sessionId);
        }
        
        public string terminateSession(string sessionId) {
            return base.Channel.terminateSession(sessionId);
        }
        
        public System.Threading.Tasks.Task<string> terminateSessionAsync(string sessionId) {
            return base.Channel.terminateSessionAsync(sessionId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Ricoh.ricoh.uDirectory.searchObjectsResponse Ricoh.ricoh.uDirectory.uDirectoryPortType.searchObjects(Ricoh.ricoh.uDirectory.searchObjectsRequest request) {
            return base.Channel.searchObjects(request);
        }
        
        public string searchObjects(string sessionId, string[] selectProps, string fromClass, uint parentObjectId, uint resultSetId, Ricoh.ricoh.uDirectory.queryTerm[] whereAnd, Ricoh.ricoh.uDirectory.queryTerm[] whereOr, Ricoh.ricoh.uDirectory.queryOrderBy[] orderBy, uint rowOffset, uint rowCount, uint lastObjectId, Ricoh.ricoh.uDirectory.property[] queryOptions, out string resultSetId1, out uint numOfResults, out Ricoh.ricoh.uDirectory.property[][] rowList) {
            Ricoh.ricoh.uDirectory.searchObjectsRequest inValue = new Ricoh.ricoh.uDirectory.searchObjectsRequest();
            inValue.sessionId = sessionId;
            inValue.selectProps = selectProps;
            inValue.fromClass = fromClass;
            inValue.parentObjectId = parentObjectId;
            inValue.resultSetId = resultSetId;
            inValue.whereAnd = whereAnd;
            inValue.whereOr = whereOr;
            inValue.orderBy = orderBy;
            inValue.rowOffset = rowOffset;
            inValue.rowCount = rowCount;
            inValue.lastObjectId = lastObjectId;
            inValue.queryOptions = queryOptions;
            Ricoh.ricoh.uDirectory.searchObjectsResponse retVal = ((Ricoh.ricoh.uDirectory.uDirectoryPortType)(this)).searchObjects(inValue);
            resultSetId1 = retVal.resultSetId;
            numOfResults = retVal.numOfResults;
            rowList = retVal.rowList;
            return retVal.returnValue;
        }
        
        public System.Threading.Tasks.Task<Ricoh.ricoh.uDirectory.searchObjectsResponse> searchObjectsAsync(Ricoh.ricoh.uDirectory.searchObjectsRequest request) {
            return base.Channel.searchObjectsAsync(request);
        }
        
        public Ricoh.ricoh.uDirectory.property[][] getObjectsProps(string sessionId, string[] objectIdList, string[] selectProps, Ricoh.ricoh.uDirectory.property[] options) {
            return base.Channel.getObjectsProps(sessionId, objectIdList, selectProps, options);
        }
        
        public System.Threading.Tasks.Task<Ricoh.ricoh.uDirectory.property[][]> getObjectsPropsAsync(string sessionId, string[] objectIdList, string[] selectProps, Ricoh.ricoh.uDirectory.property[] options) {
            return base.Channel.getObjectsPropsAsync(sessionId, objectIdList, selectProps, options);
        }
        
        public string[] putObjects(string sessionId, string objectClass, string parentObjectId, Ricoh.ricoh.uDirectory.property[][] propListList, Ricoh.ricoh.uDirectory.property[] options) {
            return base.Channel.putObjects(sessionId, objectClass, parentObjectId, propListList, options);
        }
        
        public System.Threading.Tasks.Task<string[]> putObjectsAsync(string sessionId, string objectClass, string parentObjectId, Ricoh.ricoh.uDirectory.property[][] propListList, Ricoh.ricoh.uDirectory.property[] options) {
            return base.Channel.putObjectsAsync(sessionId, objectClass, parentObjectId, propListList, options);
        }
        
        public string putObjectProps(string sessionId, uint objectId, Ricoh.ricoh.uDirectory.property[] propList, Ricoh.ricoh.uDirectory.property[] options) {
            return base.Channel.putObjectProps(sessionId, objectId, propList, options);
        }
        
        public System.Threading.Tasks.Task<string> putObjectPropsAsync(string sessionId, uint objectId, Ricoh.ricoh.uDirectory.property[] propList, Ricoh.ricoh.uDirectory.property[] options) {
            return base.Channel.putObjectPropsAsync(sessionId, objectId, propList, options);
        }
        
        public string putObjectRelations(string sessionId, Ricoh.ricoh.uDirectory.objectRelation[] objectRelationList, Ricoh.ricoh.uDirectory.property[] options) {
            return base.Channel.putObjectRelations(sessionId, objectRelationList, options);
        }
        
        public System.Threading.Tasks.Task<string> putObjectRelationsAsync(string sessionId, Ricoh.ricoh.uDirectory.objectRelation[] objectRelationList, Ricoh.ricoh.uDirectory.property[] options) {
            return base.Channel.putObjectRelationsAsync(sessionId, objectRelationList, options);
        }
        
        public string deleteObjects(string sessionId, string[] objectIdList, Ricoh.ricoh.uDirectory.property[] options) {
            return base.Channel.deleteObjects(sessionId, objectIdList, options);
        }
        
        public System.Threading.Tasks.Task<string> deleteObjectsAsync(string sessionId, string[] objectIdList, Ricoh.ricoh.uDirectory.property[] options) {
            return base.Channel.deleteObjectsAsync(sessionId, objectIdList, options);
        }
        
        public string deleteObjectRelations(string sessionId, Ricoh.ricoh.uDirectory.objectRelation[] objectRelationList, Ricoh.ricoh.uDirectory.property[] options) {
            return base.Channel.deleteObjectRelations(sessionId, objectRelationList, options);
        }
        
        public System.Threading.Tasks.Task<string> deleteObjectRelationsAsync(string sessionId, Ricoh.ricoh.uDirectory.objectRelation[] objectRelationList, Ricoh.ricoh.uDirectory.property[] options) {
            return base.Channel.deleteObjectRelationsAsync(sessionId, objectRelationList, options);
        }
    }
}
